{"version":3,"sources":["Components/Header/Header.tsx","Components/From/Button.tsx","Components/From/Input.tsx","Components/From/From.tsx","Components/ContacstPage/Contacts.tsx","Components/ContacstPage/ContactsPage.tsx","Components/MainPage.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","header","padding","spacing","Header","text","variant","clasess","Typography","className","component","gutterBottom","color","align","useStyle","root","margin","PrimaryButton","children","props","styles","Button","fullWidth","type","Input","forwardRef","ref","TextField","inputRef","display","flexDirection","marginLeft","marginRight","width","schema","yup","shape","name","matches","required","phone","Form","onChangeName","onChangePhone","onSubmitForm","onCheckContactList","classes","useForm","defaultValues","mode","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","data","Swal","fire","id","Date","now","number","position","icon","title","showConfirmButton","timer","label","error","helperText","message","value","onChange","e","target","maxWidth","Contacts","contacts","filter","onDeleteContact","contactsRender","constants","item","toLowerCase","includes","List","map","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","textAlign","ContactsPage","onChangeFilter","MainPage","useState","state","setState","useEffect","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","find","prevState","preState","App","CssBaseline","Container","fixed","style","backgroundColor","minHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cb529b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme:Theme) => createStyles({\r\n    header: {\r\n        padding: theme.spacing(5)\r\n    }\r\n}))\r\n\r\ntype PropsTypes = {\r\n    text: string\r\n    variant?: 'h2' | 'h3'\r\n}\r\n\r\nexport const Header:React.FC<PropsTypes> = ({text,variant='h2'}) => {\r\n    const clasess = useStyles()\r\n    return (\r\n        <Typography\r\n            className={clasess.header}\r\n            variant={variant}\r\n            component={variant}\r\n            gutterBottom\r\n            color=\"primary\"\r\n            align=\"center\"\r\n        >\r\n            {text}\r\n        </Typography>\r\n    )\r\n}\r\n","import {Button, makeStyles} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\n\r\nconst useStyle = makeStyles((theme) => {\r\n    return {\r\n        root: {\r\n            margin: theme.spacing(3, 0 ,2)\r\n        }\r\n    }\r\n})\r\n\r\nexport const PrimaryButton = ({children, ...props}:any) => {\r\n    const styles = useStyle();\r\n    return <Button\r\n        className={styles.root}\r\n\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        {...props}\r\n    >\r\n        {children}\r\n    </Button>\r\n}","import {forwardRef} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nexport const Input = forwardRef((props:any, ref:any) => {\r\n\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin='normal'\r\n            inputRef={ref}\r\n            fullWidth\r\n            {...props}\r\n        />\r\n    )\r\n\r\n\r\n})\r\n","import React from 'react'\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles'\r\nimport {PrimaryButton} from \"./Button\"\r\nimport * as yup from \"yup\"\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {Input} from \"./Input\";\r\nimport {ContactType} from \"../MainPage\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ntype PropsType = {\r\n    name: string,\r\n    phone: string,\r\n    onChangeName: (value: string) => void\r\n    onChangePhone: (value: string) => void\r\n    onSubmitForm: (data: ContactType) => void\r\n    onCheckContactList: (name: string) => undefined | ContactType\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            '& > *': {\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                margin: theme.spacing(1),\r\n                width: '50ch',\r\n            },\r\n        },\r\n\r\n    }),\r\n);\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup\r\n        .string()\r\n        .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\")\r\n        .required(\"Имя - Обязательное поле\"),\r\n    phone: yup\r\n        .string()\r\n        .matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\")\r\n        .required(\"Номер телефона - Обязательное поле\")\r\n})\r\n\r\n\r\nexport const Form: React.FC<PropsType> = ({name, phone, onChangeName, onChangePhone, onSubmitForm, onCheckContactList}) => {\r\n\r\n\r\n    const classes = useStyles();\r\n    const onSubmit = (data: { name: string, phone: string }) => {\r\n        const matchContact = onCheckContactList(name)\r\n        if (matchContact){\r\n            Swal.fire(`${name}`, \"<p>Уже есть в ваших контактах</p>\")\r\n            return\r\n        }\r\n        const id = 'id-' + Date.now()\r\n        onSubmitForm({id: id, number: data.phone, name: data.name})\r\n\r\n\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: `${name} Добавлен(a) в ваши контакты `,\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n\r\n\r\n        onChangeName('')\r\n        onChangePhone('')\r\n\r\n    }\r\n\r\n    const {register, handleSubmit, formState: {errors}} = useForm({\r\n        defaultValues: {name, phone},\r\n        mode: \"onBlur\",\r\n        resolver: yupResolver(schema)\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <form className={classes.root}  onSubmit={handleSubmit(onSubmit)}>\r\n            <Input\r\n                {...register('name')}\r\n                id=\"name\"\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                error={!!errors.name}\r\n                helperText={errors?.name?.message}\r\n                value={name}\r\n                onChange={(e: any) => onChangeName(e.target.value)}\r\n            />\r\n            <Input\r\n                {...register('phone')}\r\n                id=\"phone\"\r\n                type=\"text\"\r\n                label=\"Phone\"\r\n                error={!!errors.phone}\r\n                helperText={errors?.phone?.message}\r\n                value={phone}\r\n                onChange={(e: any) => onChangePhone(e.target.value)}\r\n            />\r\n            <PrimaryButton>Add contact</PrimaryButton>\r\n        </form>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {ContactType} from \"../MainPage\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto'\r\n\r\n        },\r\n    }),\r\n);\r\n\r\ntype PropsTypes = {\r\n    filter: string\r\n    contacts: Array<ContactType>\r\n    onDeleteContact: (id: string) => void\r\n}\r\n\r\nexport const Contacts: React.FC<PropsTypes> = ({contacts, filter, onDeleteContact}) => {\r\n    const classes = useStyles();\r\n    const contactsRender = (function (constants, filter) {\r\n        if (filter) {\r\n            return contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n        }\r\n        return contacts\r\n    })(contacts, filter)\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List>\r\n                {contactsRender.map(item => <ListItem key={item.id}>\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            <AccountCircleIcon/>\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary={item.name}\r\n                        secondary={item.number}\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"delete\"\r\n                            onClick={() => onDeleteContact(item.id)}\r\n                        >\r\n                            <DeleteIcon/>\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                )}\r\n            </List>\r\n        </div>\r\n    );\r\n}","import {Header} from \"../Header/Header\";\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {ContactType} from \"../MainPage\";\r\nimport { Contacts } from \"./Contacts\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            textAlign: 'center',\r\n            '& > *': {\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                margin: theme.spacing(1),\r\n                width: '50ch',\r\n            },\r\n        },\r\n\r\n    }),\r\n);\r\n\r\ntype PropsTypes = {\r\n    filter: string\r\n    onChangeFilter: (value:string) => void\r\n    contacts: Array<ContactType>\r\n    onDeleteContact: (id: string) => void\r\n\r\n}\r\n\r\n\r\n\r\nexport const ContactsPage:React.FC<PropsTypes> = ({filter, onChangeFilter, contacts, onDeleteContact}) => {\r\n    const classes = useStyles();\r\n    return <>\r\n        <Header\r\n            text=\"Contacts\"\r\n            variant='h3'\r\n        />\r\n        <div className={classes.root}>\r\n            <TextField\r\n                id=\"filter\"\r\n                label=\"Find contacts by name\"\r\n                variant=\"outlined\"\r\n                value={filter}\r\n                onChange={(e)=> onChangeFilter(e.target.value)}\r\n            />\r\n        </div>\r\n        <Contacts\r\n            contacts={contacts}\r\n            filter={filter}\r\n            onDeleteContact={onDeleteContact}\r\n        />\r\n    </>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Header} from \"./Header/Header\";\r\nimport {Form} from \"./From/From\";\r\nimport { ContactsPage } from './ContacstPage/ContactsPage';\r\n\r\n\r\nexport type ContactType = {\r\n    id: string,\r\n    name: string,\r\n    number: string,\r\n}\r\n\r\n\r\nexport type IState = {\r\n    contacts: Array<ContactType>\r\n    filter: string\r\n    name: string\r\n    number: string\r\n}\r\n\r\nexport const MainPage  = () =>  {\r\n\r\n    const [state, setState] = useState<IState>({\r\n        contacts: [\r\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n        ],\r\n        filter: '',\r\n        name: '',\r\n        number: ''\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const constants = localStorage.getItem('contacts')\r\n        if (constants){\r\n            const parseContacts = JSON.parse(constants) as Array<ContactType>\r\n            setState(\r\n                {...state, contacts: [...parseContacts]}\r\n            )\r\n        }\r\n    },[])\r\n    useEffect(() => {\r\n        localStorage.setItem('contacts', JSON.stringify(state.contacts))\r\n\r\n\r\n    },[state.contacts])\r\n\r\n    const onChangeName = (value: string) => {\r\n       setState(prevState => {\r\n           return {...prevState, name: value}\r\n       })\r\n    }\r\n    const onChangePhone = (value: string) => {\r\n       setState(preState => {\r\n           return {...preState, number: value}\r\n       })\r\n    }\r\n    const onChangeFilter = (value: string) => {\r\n        setState(preState => {\r\n            return {...preState, filter: value}\r\n        })\r\n    }\r\n    const onSubmitForm = (data: ContactType) => {\r\n       setState(prevState => {\r\n           return (\r\n               {...prevState, contacts: [...prevState.contacts, data]}\r\n           )\r\n       })\r\n    }\r\n    const  onDeleteContact = (id: string) => {\r\n        setState(prevState => {\r\n           return {...prevState, contacts: [...prevState.contacts.filter(item => item.id !== id)]}\r\n       })\r\n    }\r\n    const onCheckContactList = (name:string) => {\r\n       return (state.contacts.find(item => item.name === name))\r\n    }\r\n        return (\r\n            <>\r\n                <Header text='PhoneBook'/>\r\n                <Form\r\n                 onCheckContactList={onCheckContactList}\r\n                onSubmitForm={onSubmitForm}\r\n                name={state.name}\r\n                phone={state.number}\r\n                onChangeName={onChangeName}\r\n                onChangePhone={onChangePhone}\r\n                />\r\n                <ContactsPage\r\n                    filter={state.filter}\r\n                    onChangeFilter={onChangeFilter}\r\n                    contacts={state.contacts}\r\n                    onDeleteContact={onDeleteContact}\r\n                />\r\n            </>\r\n        )\r\n\r\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {MainPage} from \"./Components/MainPage\";\n\n\nexport const App = ()  => {\n  return (\n      <>\n        <CssBaseline />\n        <Container fixed>\n          <Typography\n              component=\"div\"\n              style={{ backgroundColor: '#cfe8fc', minHeight: '100vh' }}\n              children={\n                <MainPage/>\n              }\n          />\n        </Container>\n      </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from \"./App\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}